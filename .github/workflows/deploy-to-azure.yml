name: Deploy to Azure App Service

on:
  push:
    branches:
      - main  
   
  workflow_dispatch: 

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push Docker images
      run: |
        docker build -t ${DOCKERHUB_USERNAME}/productapi:latest -f backend/ProductAPI/Dockerfile ./backend/ProductAPI
        docker build -t ${DOCKERHUB_USERNAME}/product-front:latest -f frontend/ProductFront/Dockerfile ./frontend/ProductFront
        docker push ${DOCKERHUB_USERNAME}/productapi:latest
        docker push ${DOCKERHUB_USERNAME}/product-front:latest

    - name: Update Docker Compose file with image names
      run: |
        cd backend/ProductAPI/ProductAPI
        sed -i 's|productapi:latest|${DOCKERHUB_USERNAME}/productapi:latest|g' docker-compose.yml
        sed -i 's|product-front:latest|${DOCKERHUB_USERNAME}/product-front:latest|g' docker-compose.yml

    - name: Set up Azure CLI
      uses: azure/cli-action@v1
      with:
        inlineScript: |
          echo "Setting up Azure CLI..."
          az login --service-principal -u ${{ secrets.AZURE_SP_APP_ID }} -p ${{ secrets.AZURE_SP_PASSWORD }} --tenant ${{ secrets.AZURE_TENANT_ID }}

    - name: Deploy to Azure App Service
      run: |
        echo "Deploying to Azure App Service..."
        az webapp config container set --name ${{ secrets.AZURE_WEBAPP_NAME }} --resource-group ${{ secrets.AZURE_RG }} --multicontainer-config-type compose --multicontainer-config-file backend/ProductAPI/ProductAPI/docker-compose.yml

    - name: Restart Azure App Service
      run: |
        echo "Restarting Azure App Service..."
        az webapp restart --name ${{ secrets.AZURE_WEBAPP_NAME }} --resource-group ${{ secrets.AZURE_RG }}
